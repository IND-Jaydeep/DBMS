--A6 Employee_Work--
-- Step 1: Create the database schema and tables

-- Create Employee table
CREATE TABLE employee (
    employee_name VARCHAR(100) PRIMARY KEY,
    street VARCHAR(100),
    city VARCHAR(50)
);

-- Create Company table
CREATE TABLE company (
    company_name VARCHAR(100) PRIMARY KEY,
    city VARCHAR(50)
);

-- Create Works table (Relationship between Employee and Company)
CREATE TABLE works (
    employee_name VARCHAR(100),
    company_name VARCHAR(100),
    salary DECIMAL(10, 2),
    FOREIGN KEY (employee_name) REFERENCES employee(employee_name),
    FOREIGN KEY (company_name) REFERENCES company(company_name)
);

-- Create Manages table (Manager-Employee relationship)
CREATE TABLE manages (
    employee_name VARCHAR(100),
    manager_name VARCHAR(100),
    FOREIGN KEY (employee_name) REFERENCES employee(employee_name),
    FOREIGN KEY (manager_name) REFERENCES employee(employee_name)
);

-- Step 2: Insert sample data into the tables

-- Insert data into Employee table
INSERT INTO employee (employee_name, street, city) VALUES
('Alice', '123 Elm St', 'New York'),
('Bob', '456 Oak St', 'Chicago'),
('Charlie', '789 Pine St', 'New York'),
('David', '101 Maple St', 'Chicago'),
('Eve', '202 Birch St', 'San Francisco');

-- Insert data into Company table
INSERT INTO company (company_name, city) VALUES
('First Bank Corporation', 'New York'),
('Small Bank Corporation', 'San Francisco'),
('Tech Innovations', 'Chicago');

-- Insert data into Works table
INSERT INTO works (employee_name, company_name, salary) VALUES
('Alice', 'First Bank Corporation', 12000),
('Bob', 'Tech Innovations', 8000),
('Charlie', 'First Bank Corporation', 9500),
('David', 'Small Bank Corporation', 11000),
('Eve', 'Small Bank Corporation', 11500);

-- Insert data into Manages table
INSERT INTO manages (employee_name, manager_name) VALUES
('Bob', 'Alice'),
('Charlie', 'Alice'),
('David', 'Charlie'),
('Eve', 'David');

-- Step 3: SQL Queries for the requested operations

-- 1. Find the names of all employees who work for First Bank Corporation.
SELECT employee_name
FROM works
WHERE company_name = 'First Bank Corporation';

-- 2. Find all employees who do not work for First Bank Corporation.
SELECT employee_name
FROM works
WHERE company_name != 'First Bank Corporation';

-- 3. Find the company that has the most employees.
SELECT company_name
FROM works
GROUP BY company_name
ORDER BY COUNT(employee_name) DESC
FETCH FIRST 1 ROWS ONLY;

-- 4. Find all companies located in the same city as Small Bank Corporation.
SELECT company_name
FROM company
WHERE city = (SELECT city FROM company WHERE company_name = 'Small Bank Corporation');

-- 5. Find details of employees having salary greater than 10,000.
SELECT e.employee_name, e.street, e.city, w.salary
FROM employee e
JOIN works w ON e.employee_name = w.employee_name
WHERE w.salary > 10000;

-- 6. Update salary of all employees who work for First Bank Corporation by 10%.
UPDATE works
SET salary = salary * 1.10
WHERE company_name = 'First Bank Corporation';

-- 7. Find employees and their managers.
SELECT e.employee_name AS Employee, m.manager_name AS Manager
FROM manages m
JOIN employee e ON m.employee_name = e.employee_name;

-- 8. Find the names, street, and cities of all employees who work for First Bank Corporation and earn more than 10,000.
SELECT e.employee_name, e.street, e.city
FROM employee e
JOIN works w ON e.employee_name = w.employee_name
WHERE w.company_name = 'First Bank Corporation' AND w.salary > 10000;

-- 9. Find those companies whose employees earn a higher salary, on average, than the average salary at First Bank Corporation.
SELECT company_name
FROM works
GROUP BY company_name
HAVING AVG(salary) > (SELECT AVG(salary) FROM works WHERE company_name = 'First Bank Corporation');
